services:

  frontend:
    image: metabase/metabase:latest
    container_name: frontend_metabase
    hostname: frontend_metabase
    volumes:
      - /dev/urandom:/dev/random:ro
      - datavault-data:/db/data
    ports:
      - 3000:3000
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabaseappdb
      MB_DB_PORT: 5432
      MB_DB_USER_FILE: /run/secrets/backend_user
      MB_DB_PASS_FILE: /run/secrets/backend_password
      MB_DB_HOST: backend_postgres
    networks:
      - metanet1
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5
    secrets:
      - backend_user
      - backend_password

  backend:
    image: postgres:latest
    container_name: backend_postgres
    hostname: backend_postgres
    environment:
      POSTGRES_USER_FILE: /run/secrets/backend_user
      POSTGRES_DB: metabaseappdb
      POSTGRES_PASSWORD_FILE: /run/secrets/backend_password
    networks:
      - metanet1
    volumes:
    - backend-data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    secrets:
      - backend_user
      - backend_password

  datavault:
    container_name: datavault_sqlite3
    build: ./datavault
    volumes:
      - datavault-data:/db/data/
  
  etl:
    container_name: etl_python
    depends_on: 
      - datavault
    build: ./etl
    volumes:
      - datavault-data:/db/data/
      - etl-data:/filmmeisterapp/
    # command: python3 film_meister_datavault_main.py

networks:
  metanet1:
    driver: bridge

volumes:
  backend-data:
  datavault-data:
  etl-data:

secrets:
  backend_user:
    file: ./secrets/backend_user.txt
  backend_password:
    file: ./secrets/backend_password.txt